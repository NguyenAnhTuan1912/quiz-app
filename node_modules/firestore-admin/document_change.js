class DocumentChange {
  /**
   * @param {object} docChange A reference to the DocumentChange.
   */
  constructor(docChange) {
    this.docChange_ = docChange;
  }

  /**
   * @returns {object} Returns the document affected by this change.
   */
  Doc() {
    return this.docChange_.doc;
  }

  /**
   * @returns {object} Returns the index of the changed document in the result set immediately after this DocumentChange (i.e. supposing that all prior DocumentChange objects and the current DocumentChange object have been applied). Is -1 for 'removed' events.
   */
  NewIndex() {
    return this.docChange_.newIndex;
  }

  /**
   * @returns {object} Returns the index of the changed document in the result set immediately prior to this DocumentChange (i.e. supposing that all prior DocumentChange objects have been applied). Is -1 for 'added' events.
   */
  OldIndex() {
    return this.docChange_.oldIndex;
  }

  /**
   * @returns {object} Returns The type of change ('added', 'modified', or 'removed').
   */
  Type() {
    return this.docChange_.type;
  }
}

//---------------------------------
// EXPORTS

exports.DocumentChange = DocumentChange;