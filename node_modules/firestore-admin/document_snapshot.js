class DocumentSnapshot {
  /**
   * @param {object} snapshot A refrence to the DocumentSnapshot.
   */
  constructor(snapshot) {
    this.snapshot_ = snapshot;
  }

  /**
   * The time the document was created. Undefined for documents that don't exist.
   * @returns {string} Returns a string.
   */
  CreateTime() {
    return this.snapshot_.createTime;
  }

  /**
   * Retrieves all fields in the document as an object.
   * @returns {object} Returns an object.
   */
  Data() {
    return this.snapshot_.data();
  }

  /**
   * The ID of the document for which this DocumentSnapshot contains data.
   * @returns {string} Returns a string.
   */
  Exists() {
    return this.snapshot_.exists;
  }

  /**
   * Retrieves the field specified by the field path. (Example: 'a.b')
   * @param {string} fieldPath
   * @returns {object} Returns any type.
   */
  Get(fieldPath) {
    return this.snapshot_.get(fieldPath);
  }

  /**
   * Retrieves all fields in the document as an object.
   * @returns {object} Returns an object.
   */
  Id() {
    return this.snapshot_.id;
  }

  /**
   * The time this snapshot was read.
   * @returns {string} Returns an string.
   */
  ReadTime() {
    return this.snapshot_.readTime;
  }

  /**
   * A DocumentReference for the document stored in this snapshot.
   * @returns {object} Returns an object.
   */
  Ref() {
    return this.snapshot_.ref;
  }

  /**
   * The time the document was last updated (at the time the snapshot was generated). Undefined for documents that don't exist.
   * @returns {object} Returns an object.
   */
  UpdateTime() {
    return this.snapshot_.updateTime;
  }
}

//----------------------------
// EXPORTS

exports.DocumentSnapshot = DocumentSnapshot;